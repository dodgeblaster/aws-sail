service: sls-sail-example

plugins:
    - serverless-pseudo-parameters

custom:
    stage: ${opt:stage, self:provider.stage}
    region: ${opt:region, self:provider.region}
    userPool: demo-admin
    eventbus: demo-events-${self:custom.stage}
    endpoint:
        Fn::Join:
            - ""
            - - https://
              - Ref: ApiGatewayRestApi
              - .execute-api.${self:provider.region}.amazonaws.com/${self:provider.stage}

provider:
    name: aws
    runtime: nodejs12.x
    environment:
        TABLE: ${self:service}-${opt:stage, self:provider.stage}
        STAGE: ${self:custom.stage}
        REGION: ${self:custom.region}
        EVENTBUS: ${self:custom.eventbus}
        ENDPOINT: ${self:custom.endpoint}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:service}-${opt:stage, self:provider.stage}"

functions:
    get:
        handler: handler.get
        events:
            - http:
                  path: /get
                  method: get

    query:
        handler: handler.query
        events:
            - http:
                  path: /query
                  method: get
    create:
        handler: handler.create
        events:
            - http:
                  path: /create
                  method: get
    put:
        handler: handler.put
        events:
            - http:
                  path: /put
                  method: get
    remove:
        handler: handler.remove
        events:
            - http:
                  path: /remove
                  method: get

resources:
    - ${file(resources/db.yml)}
    - ${file(resources/eventBridge.yml)}
